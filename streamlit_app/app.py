import streamlit as st
import requests
import base64
from PIL import Image
import io
import os
from dotenv import load_dotenv
import time
import json

load_dotenv()

# Configure the page
st.set_page_config(
    page_title="–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö —Å—Ö–µ–º",
    page_icon="üîå",
    layout="wide"
)

# Title and description
st.title("üîå –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö —Å—Ö–µ–º")
st.markdown("""
–≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ —Å—Ö–µ–º—ã –∏ –Ω–∞–π—Ç–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã.
""")

# API Configuration
with st.sidebar:
    st.subheader("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ API")
    base_url = os.getenv("API_URL", "http://proxy:8000")
    timeout = st.number_input(
        "–¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ (—Å–µ–∫)",
        min_value=1,
        max_value=60,
        value=30,
        help="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç API"
    )

# Initialize session state for chat history
if "messages" not in st.session_state:
    st.session_state.messages = []

# Create two columns for the layout
col1, col2 = st.columns([1, 1])

with col1:
    st.subheader("üìù –í–≤–µ–¥–∏—Ç–µ netlist")
    # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ netlist
    netlist = st.text_area(
        "–í—Å—Ç–∞–≤—å—Ç–µ netlist –≤–∞—à–µ–π —Å—Ö–µ–º—ã:",
        height=300,
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä:\nR1 1 2 1k\nR2 2 3 2k\n..."
    )
    
    # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    st.subheader("üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ö–µ–º—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
    uploaded_file = st.file_uploader(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ö–µ–º—ã (–µ—Å–ª–∏ –µ—Å—Ç—å):",
        type=['png', 'jpg', 'jpeg'],
        help="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –≤ –∞–Ω–∞–ª–∏–∑–µ —Å—Ö–µ–º—ã"
    )

with col2:
    st.subheader("‚ùì –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å")
    # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞
    question = st.text_area(
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ —Å—Ö–µ–º–µ:",
        height=100,
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å—Ö–µ–º—É –∏ –Ω–∞–π–¥–∏ –æ—à–∏–±–∫–∏"
    )
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
    if st.button("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å", type="primary"):
        if not netlist:
            st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ netlist —Å—Ö–µ–º—ã")
        elif not question:
            st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ —Å—Ö–µ–º–µ")
        else:
            try:
                # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
                data = {
                    "prompt": f"Netlist —Å—Ö–µ–º—ã:\n{netlist}\n\n–í–æ–ø—Ä–æ—Å: {question}"
                }
                
                # –ï—Å–ª–∏ –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
                if uploaded_file is not None:
                    image = Image.open(uploaded_file)
                    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ base64
                    buffered = io.BytesIO()
                    image.save(buffered, format="PNG")
                    img_str = base64.b64encode(buffered.getvalue()).decode()
                    data["image_base64"] = img_str
                
                # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API
                with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ö–µ–º—É..."):
                    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                    st.sidebar.write(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞: {base_url}/ask")
                    st.sidebar.write("–î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞:", data)
                    
                    response = requests.post(
                        f"{base_url}/ask",
                        json=data,
                        timeout=timeout
                    )
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                    st.sidebar.write(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
                    st.sidebar.write("–û—Ç–≤–µ—Ç:", response.text)
                    
                    if response.status_code == 200:
                        result = response.json()
                        st.success("–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
                        st.markdown("### üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞")
                        st.markdown(result["reply"])
                    else:
                        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Å—Ö–µ–º—ã: {response.text}")
            
            except Exception as e:
                st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

# Display chat history
st.subheader("–ò—Å—Ç–æ—Ä–∏—è –æ–±—â–µ–Ω–∏—è")
for message in st.session_state.messages:
    if message["role"] == "user":
        st.write("üë§ –í—ã:", message["content"])
    else:
        st.write("ü§ñ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:", message["content"])

# –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–¥–æ—Ä–æ–≤—å–µ API
try:
    health = requests.get(f"{base_url}/health")
    if health.status_code == 200:
        st.sidebar.success("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω")
        st.sidebar.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–æ–¥–µ–ª—å: {health.json()['model']}")
    else:
        st.sidebar.error("‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
except:
    st.sidebar.error("‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω") 